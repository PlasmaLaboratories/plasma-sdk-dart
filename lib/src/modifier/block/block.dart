import 'package:bip_topl/bip_topl.dart';
import 'package:mubrambl/src/core/transaction.dart';
import 'package:mubrambl/src/model/box/arbit_box.dart';
import 'package:mubrambl/src/modifier/modifier_id.dart';
import 'package:mubrambl/src/modifier/node_view_modifier.dart';
import 'package:pinenacl/ed25519.dart';

///
///A block is an atomic piece of data network participates are agreed on.
///
/// A block has:
///- transactional data: a sequence of transactions, where a transaction is an atomic state update.
///Some metadata is possible as well(transactions Merkle tree root, state Merkle tree root etc).
///
///- consensus data to check whether block was generated by a right party in a right way. E.g.
///"baseTarget" & "generatorSignature" fields in the Nxt block structure, nonce & difficulty in the
///Bitcoin block structure.
///
///- a signature(s) of a block generator(s)
///
///- additional data: block structure version no, timestamp etc
///
class Block extends NodeViewModifier {
  final ModifierId parentId;
  final ModifierId id;
  final DateTime timeStamp;
  final ArbitBox generatorBox;
  final Bip32VerifyKey publicKey;
  final SignatureBase signature;
  final int height;
  final int difficulty;
  final Uint8List value;
  final List<Transaction> txs;
  final int version;

  Block(
      this.parentId,
      this.id,
      this.timeStamp,
      this.generatorBox,
      this.publicKey,
      this.signature,
      this.height,
      this.difficulty,
      this.value,
      this.txs,
      this.version)
      : super(3, id);
}
